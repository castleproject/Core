<?xml version="1.0" encoding="utf-8"?>

<!--
***********************************************************************************************

	Common targets and properties for VS and external build files

Copyright 2004-2013 Castle Project - http://www.castleproject.org/

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!--
		Overridable properties
	-->
	<PropertyGroup>
		<Configuration Condition="$(Configuration)=='' or $(Configuration)=='Release'">NET40-Release</Configuration>
	</PropertyGroup>

	<!-- .NET 4.5 -->
	<PropertyGroup Condition="$(Configuration) == 'NET45-Release' or $(Configuration) == 'NET45-Debug'">
		<BuildConfigKey>NET45</BuildConfigKey>
		<TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
	</PropertyGroup>

	<!-- .NET 4.0 (default) -->
	<PropertyGroup Condition="$(Configuration) == 'NET40-Release' or $(Configuration) == 'NET40-Debug'">
		<BuildConfigKey>NET40</BuildConfigKey>
		<TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
	</PropertyGroup>

	<!-- .NET 3.5 -->
	<PropertyGroup Condition="$(Configuration) == 'NET35-Release' or $(Configuration) == 'NET35-Debug'">
		<BuildConfigKey>NET35</BuildConfigKey>
		<TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
	</PropertyGroup>

	<!--Silverlight 5.0 runtime-->
	<PropertyGroup Condition="$(Configuration) == 'SL50-Release' or $(Configuration) == 'SL50-Debug'">
		<BuildConfigKey>SL50</BuildConfigKey>
		<TargetFrameworkIdentifier>Silverlight</TargetFrameworkIdentifier>
		<MSBuildTargets>Silverlight 5.0</MSBuildTargets>
		<TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
	</PropertyGroup>

	<PropertyGroup>
		<BuildConfigDescription Condition=" '$(BuildConfigDescription)' == '' ">$(TargetFrameworkIdentifier) $(TargetFrameworkVersion)</BuildConfigDescription>
		<BuildConfigDescription Condition=" '$(TargetFrameworkProfile)' != '' ">$(BuildConfigDescription) Client Profile</BuildConfigDescription>
	</PropertyGroup>

	<!-- Project folders -->
	<PropertyGroup>
		<TargetFrameworkIdentifier Condition="'$(TargetFrameworkIdentifier)' ==''">.NETFramework</TargetFrameworkIdentifier> <!-- MSBuild 4.0 defines this -->
		<BuildPath Condition="$(BuildPath)==''">$(RootPath)/build</BuildPath>
		<OutputPath Condition="'$(OutputPath)' == ''">$(BuildPath)/$(BuildConfigKey)/$(Configuration)/bin/</OutputPath>
		<BuildScriptsPath Condition="'$(BuildScriptsPath)' ==''">$(RootPath)/buildscripts</BuildScriptsPath>
		<ToolsPath Condition="'$(ToolsPath)' == ''">$(RootPath)/tools</ToolsPath>
		<SolutionName Condition="'$(SolutionName)' == ''">$(ProjectName)</SolutionName>
		<SolutionPath Condition="'$(SolutionPath)' == '' and '$(SolutionName)' != ''">$(RootPath)/$(SolutionName).sln</SolutionPath>
		<SolutionPath Condition="'$(SolutionPath)' == ''">$(RootPath)/$(ProjectName).sln</SolutionPath>
		<TestResultsPath Condition="'$(TestResultsPath)' == ''">$(OutputPath)test-results</TestResultsPath>
	</PropertyGroup>


	<!-- AssemblyInfo Properties -->
	<PropertyGroup>
		<AssemblyInfoFile Condition="'$(AssemblyInfoFile)' == ''">AssemblyInfo.cs</AssemblyInfoFile>
		<AssemblyTitle Condition="'$(AssemblyTitle)' == ''">$(ProjectName) $(Project_Major).$(Project_Minor).$(Project_Build)$(BuildName) for $(BuildConfigDescription)</AssemblyTitle>
		<AssemblyProduct Condition="'$(AssemblyProduct)' == ''">$(ProjectName)</AssemblyProduct>
		<AssemblyDescription Condition="'$(AssemblyDescription)' != ''">$(AssemblyDescription)</AssemblyDescription>
		<ComVisible Condition="'$(ComVisible)' == ''">false</ComVisible>
		<CLSCompliant Condition="'$(CLSCompliant)' == ''">true</CLSCompliant>
		<AllowPartiallyTrustedCallers Condition="'$(AllowPartiallyTrustedCallers)' == ''">false</AllowPartiallyTrustedCallers>

		<!-- Assembly versioning. These can be overridden to vary file and assembly versions. -->
		<AssemblyVersion_Major Condition="'$(AssemblyVersion_Major)' == ''">$(Project_Major)</AssemblyVersion_Major>
		<AssemblyVersion_Minor Condition="'$(AssemblyVersion_Minor)' == ''">$(Project_Minor)</AssemblyVersion_Minor>
		<AssemblyVersion_Build Condition="'$(AssemblyVersion_Build)' == ''">$(Project_Build)</AssemblyVersion_Build>

	</PropertyGroup>


	<!-- Signing Properties-->
	<PropertyGroup>
		<SignAssembly Condition="'$(SignAssembly)' == ''">true</SignAssembly>
		<AssemblyOriginatorKeyFile>$(BuildScriptsPath)/CastleKey.snk</AssemblyOriginatorKeyFile>
	</PropertyGroup>


	<!-- Versioning Properties -->
	<PropertyGroup>
		<!-- Picks up TeamCity's Build_Number property, or default to zero when not running under TeamCity -->
		<Build_Number Condition="'$(Build_Number)' == ''">0</Build_Number>
		<Build_Revision>$(Build_Number)</Build_Revision>
		<BuildName Condition="'$(BuildName)' == ''">.$(Build_Revision)</BuildName>
	</PropertyGroup>


	<!-- Testing Properties -->
	<PropertyGroup>
		<TestRunner_Enabled Condition="'$(TestRunner_Enabled)' == ''">true</TestRunner_Enabled>
		<!-- Controls whether tests are run -->
		<TestRunner_Timeout Condition="'$(TestRunner_Timeout)' == ''">180000</TestRunner_Timeout>
		<!-- Specifies the timeout for nunit -->
		<TestRunner_ContinueOnError Condition="'$(TestRunner_ContinueOnError)' == ''">false</TestRunner_ContinueOnError>
		<!-- Controls whether to continue the build if tests are failing -->
	</PropertyGroup>
	<ItemGroup>
		<TestAssemblies Include="$(OutputPath)Castle.Core.Tests.dll" />
	</ItemGroup>


	<!-- 3rd Party Program Paths -->
	<PropertyGroup>
		<NUnitExecutable Condition="'$(NUnitExecutable)' == ''">nunit-console-x86.exe</NUnitExecutable>
		<NUnitPath Condition="'$(NUnitPath)' == ''">$(ToolsPath)/NUnit/bin/</NUnitPath>
		<MSBuildCommunityTasksPath Condition="'$(MSBuildCommunityTasksPath)' == ''">$(ToolsPath)/MSBuildCommunityTasks</MSBuildCommunityTasksPath>
	</PropertyGroup>


	<!-- Re-define CoreCompileDependsOn to ensure the assemblyinfo files are updated before compilation. -->
	<PropertyGroup>
		<CoreCompileDependsOn>
			$(CoreCompileDependsOn);
			UpdateAssemblyInfoFiles
		</CoreCompileDependsOn>
	</PropertyGroup>


	<!-- Import 3rd party targets -->
	<Import Project="$(MSBuildCommunityTasksPath)/MSBuild.Community.Tasks.Targets" />


	<!-- Updates the AssemblyInfo. The inputs are the same as the CoreCompileDependsOn target
	to ensure that we only ever update the AssemblyInfo files if a compile is actually going to take place.-->
	<Target
		Name="UpdateAssemblyInfoFiles"
		Inputs="$(MSBuildAllProjects);
					@(Compile);
					@(ManifestResourceWithNoCulture);
					$(ApplicationIcon);
					$(AssemblyOriginatorKeyFile);
					@(ManifestNonResxWithNoCultureOnDisk);
					@(ReferencePath);
					@(CompiledLicenseFile);
					@(EmbeddedDocumentation);
					@(CustomAdditionalCompileInputs)"
		Outputs="@(IntermediateAssembly);$(AssemblyInfoFile)"
		>

		<WriteLinesToFile File="$(AssemblyInfoFile)" Overwrite="true"
			Lines='// ------------------------------------------------------------------------------&#xD;&#xA;//  &lt;autogenerated&gt;&#xD;&#xA;//      Changes to this file will be lost if the code is regenerated.&#xD;&#xA;//  &lt;/autogenerated&gt;&#xD;&#xA;// ------------------------------------------------------------------------------'
		/>
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Runtime.InteropServices.ComVisible($(ComVisible))]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.CLSCompliant($(CLSCompliant))]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyTitle("$(AssemblyTitle)")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyDescription("$(AssemblyTitle)")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyProduct("$(AssemblyProduct)")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyVersion("$(AssemblyVersion_Major).$(AssemblyVersion_Minor).$(AssemblyVersion_Build).0")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyFileVersion("$(Project_Major).$(Project_Minor).$(Project_Build).$(Build_Revision)")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Reflection.AssemblyInformationalVersion("$(Project_Major).$(Project_Minor).$(Project_Build)$(BuildName)")]' />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Security.AllowPartiallyTrustedCallers]' Condition="$(AllowPartiallyTrustedCallers) and $(BuildConfigKey) != 'NET40'" />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Security.AllowPartiallyTrustedCallers(PartialTrustVisibilityLevel=System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault)]' Condition="$(AllowPartiallyTrustedCallers) and $(BuildConfigKey) == 'NET40'" />
		<WriteLinesToFile File="$(AssemblyInfoFile)" Lines='[assembly: System.Security.SecurityRules(System.Security.SecurityRuleSet.Level2)]' Condition="$(AllowPartiallyTrustedCallers) and $(BuildConfigKey) == 'NET40'" />

	</Target>

	<!-- Run user targets last -->
	<Import Condition="Exists('$(RootPath)/Common.User.Targets')" Project="$(RootPath)/Common.User.Targets" />

</Project>
